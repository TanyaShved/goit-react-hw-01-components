{"version":3,"sources":["components/Profile/Profile.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Statistics/Statistics.module.css","components/FriendListItem/FriendListItem.module.css","components/Friendlist/FriensList.module.css","default.jpg","components/Profile/Profile.jsx","functions/randColor.js","components/Statistics/Statistics.jsx","components/FriendListItem/FriendListItem.jsx","components/Friendlist/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","App.jsx","index.jsx"],"names":["module","exports","Profile","name","tag","location","avatar","followers","views","likes","className","s","profile","description","src","defaultImage","alt","stats","item","label","quantity","defaultProps","randColor","color","Math","floor","random","pow","toString","length","Statistics","title","statistics","list","map","stat","style","backgroundColor","percentage","id","FriendListItem","isOnline","status","width","FriendList","friends","friend","protoTypes","PropTypes","arrayOf","shape","number","isRequired","TransactionHistory","items","history","head","type","amount","currency","string","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.50bdbc5e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3dzvr\",\"description\":\"Profile_description__2GJPq\",\"avatar\":\"Profile_avatar__aV4u5\",\"name\":\"Profile_name__2Psdw\",\"tag\":\"Profile_tag__20iCl\",\"location\":\"Profile_location__3GRdm\",\"stats\":\"Profile_stats__25zJx\",\"item\":\"Profile_item__Kyaaw\",\"label\":\"Profile_label__3Zjy8\",\"quantity\":\"Profile_quantity__1zFQ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__3SkB0\",\"head\":\"TransactionHistory_head__2FiQX\",\"item\":\"TransactionHistory_item__gni6l\",\"row\":\"TransactionHistory_row__2DzmC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2QFok\",\"title\":\"Statistics_title__3PVIg\",\"list\":\"Statistics_list__3oKT7\",\"item\":\"Statistics_item__1vE2T\",\"label\":\"Statistics_label__227YU\",\"percentage\":\"Statistics_percentage__3inQt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"FriendListItem_status__3rXJp\",\"avatar\":\"FriendListItem_avatar__1Coux\",\"name\":\"FriendListItem_name__2FRpb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FriensList_list__oATVU\",\"item\":\"FriensList_item__1A5VB\"};","export default __webpack_public_path__ + \"static/media/default.2e01288c.jpg\";","import PropTypes from 'prop-types';\nimport s from './Profile.module.css';\nimport defaultImage from '../../default.jpg';\n\nconst Profile = ({\n    name,\n    tag,\n    location,\n    avatar = 'defaultImage',\n    followers,\n    views,\n    likes\n}) => {\n    return (\n        <div className={s.profile}>\n            <div className={s.description}>\n                <img\n                    src={avatar ?? defaultImage}\n                    alt=\"Аватар пользователя\"\n                    className={s.avatar}\n                />\n                <p className={s.name}>{name}</p>\n                <p className={s.tag}>@{tag}</p>\n                <p className={s.location}>{location}</p>\n            </div>\n\n            <ul className={s.stats}>\n                <li className={s.item}>\n                    <span className={s.label}>Followers</span>\n                    <span className={s.quantity}>{followers}</span>\n                </li>\n                <li className={s.item}>\n                    <span className={s.label}>Views</span>\n                    <span className={s.quantity}>{views}</span>\n                </li>\n                <li className={s.item}>\n                    <span className={s.label}>Likes</span>\n                    <span className={s.quantity}>{likes}</span>\n                </li>\n            </ul>\n        </div>\n    );\n};\n\nProfile.defaultProps = {\n  avatar: defaultImage, \n};\n\nProfile.propTypes = {\n    name: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    avatar: PropTypes.string,\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n};\n\nexport default Profile;","function randColor() {\n    let color = Math.floor(Math.random() * Math.pow(256, 3)).toString(16);\n    while(color.length < 6) {\n        color = \"0\" + color;\n    }\n    return \"#\" + color;\n}\n        \nexport default randColor;","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\nimport randColor from '../../functions/randColor';\n\nconst Statistics = ({title, stats}) => {\n    return (\n        <section className={s.statistics}>\n        {title && <h2 className={s.title}>Upload stats</h2>}\n\n            <ul className={s.list}>\n                {stats.map(stat => (\n                    <li key={stat.id} className={s.item} style={{backgroundColor: randColor()}}>\n                        <span className={s.label}>{stat.label}</span>\n                <span className={s.percentage}>{stat.percentage}%</span>\n            </li>))\n                   }\n        </ul>\n        </section>\n    );\n};\n\nStatistics.propTypes = {\n    title: PropTypes.string,\n    stats: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            label: PropTypes.string.isRequired,\n            percentage: PropTypes.number.isRequired,\n        }),\n    ).isRequired,\n};\n\n\nexport default Statistics;","import PropTypes from 'prop-types';\nimport s from './FriendListItem.module.css';\nimport defaultImage from '../../default.jpg';\n\nconst FriendListItem = ({\n    avatar = 'defaultImage',\n    name,\n    isOnline\n}) => {\n    return (\n        <>\n            <span className={s.status} style={{backgroundColor: isOnline ? \"green\" : \"red\"}}>{isOnline}</span>\n    <img className={s.avatar} src={avatar ?? defaultImage} alt=\"\" width=\"48\" />\n    <p className={s.name}>{name}</p>\n    </>);\n};\n\nFriendListItem.propTypes = {\n    avatar: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired,\n};\n\nFriendListItem.defaultProps = {\n  avatar: defaultImage, \n};\n\nexport default FriendListItem;","import PropTypes from 'prop-types';\nimport FriendListItem from '../FriendListItem/FriendListItem';\nimport s from './FriensList.module.css';\n\nconst FriendList = ({ friends }) => {\n    return (\n        <ul className={s.list}>\n            {/* <!-- Произвольное кол-во FriendListItem, в зависимости от кол-ва объектов в массиве --> */\n                friends.map(friend => (\n                    <li key={friend.id} className={s.item}>\n                        <FriendListItem\n                            avatar={friend.avatar}\n                            name={friend.name}\n                            isOnline={friend.isOnline}\n                        />\n                    </li>\n                ))}\n        </ul>\n    );\n};\n\nFriendList.protoTypes = {\n    friends: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n        }),\n    ).isRequired,\n};\n\nexport default FriendList;","import PropTypes from 'prop-types';\nimport s from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({items}) => {\n    return (\n        <table className={s.history}>\n            <thead>\n                <tr className={s.head}>\n                    <th className={s.item}>Type</th>\n                    <th className={s.item}>Amount</th>\n                    <th className={s.item}>Currency</th>\n                </tr>\n            </thead>\n\n            <tbody>\n                {items.map(item => (\n                    <tr key={item.id}>\n                        <td className={s.item}>{item.type}</td>\n                        <td className={s.item}>{item.amount}</td>\n                        <td className={s.item}>{item.currency}</td>\n                </tr>))}\n            </tbody>\n        </table>\n    );\n};\n\nTransactionHistory.protoTypes = {\n    items: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            type: PropTypes.string.isRequired,\n            amount: PropTypes.number.isRequired,\n            currency: PropTypes.string.isRequired,\n        }),\n    ),\n};\n\nexport default TransactionHistory;","import Profile from './components/Profile/Profile';\nimport user from './informations/user.json';\n\nimport Statistics from './components/Statistics/Statistics';\nimport statisticalData from './informations/statistical-data.json';\n\nimport FriendList from './components/Friendlist/FriendList';\nimport friends from './informations/friends.json';\n\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\nimport transactions from './informations/transactions.json';\n\nexport default function App() {\n  return (\n    <div>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        followers={user.stats.followers}\n        views={user.stats.views}\n        likes={user.stats.likes}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <Statistics stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n<App />\n</React.StrictMode>,\n  document.querySelector('#root'));\n\n"],"sourceRoot":""}